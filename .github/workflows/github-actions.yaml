name: Streamlit_application
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]

env:
  ECR_REPOSITORY: AWS-JaeminJung/AWS-JaeminJung-bedrock-chatbot-streamlit
  ECS_CLUSTER: streamlit-app-cluster
  ECS_SERVICE: streamlit-app-service
  ECS_TASK_DEFINITION: streamlit-app-task-definition.json
  CONTAINER_NAME: streamlit-app

jobs:
  Streamlit_app_build:
    name: Streamlit_app_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with: 
          repository: AWS-JaeminJung/AWS-JaeminJung-bedrock-chatbot-streamlit
          ref: main
          token: ${{ secrets.ACTION_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: build-push
        #name: Build, tag, and push docker image to Amazon ECR
        id: build-push
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: streamlit-app
          IMAGE_TAG: ${{ github.sha }}
          Username: AWS-JaeminJung          
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Download Task Definition Template
        run: |
          aws ecs describe-task-definition \
            --task-definition streamlit-app-task-definition \
            --query taskDefinition \
            > streamlit-app-task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: streamlit-app
          image: ${{ steps.build-push.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: false

